{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Usser\\\\Documents\\\\GitHub\\\\calc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Display from\"./component/Display\";import Panel from\"./component/Panel\";import calculate from\"./utils/calculate\";import\"./App.css\";var App=function App(){var _useState=useState({total:null,next:null,operation:null}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var handleClick=function handleClick(buttonName){return setState(calculate(state,buttonName));};return/*#__PURE__*/React.createElement(\"div\",{className:\"app\"},/*#__PURE__*/React.createElement(Display,{value:state.next||state.total||\"0\"}),/*#__PURE__*/React.createElement(Panel,{clickHandler:handleClick}));};export default App;","map":{"version":3,"sources":["C:/Users/Usser/Documents/GitHub/calc/src/App.js"],"names":["React","useState","Display","Panel","calculate","App","total","next","operation","state","setState","handleClick","buttonName"],"mappings":"qKAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,OAAP,KAAoB,qBAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,mBAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,mBAAtB,CACA,MAAO,WAAP,CAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,eACWJ,QAAQ,CAAC,CAACK,KAAK,CAAE,IAAR,CAAcC,IAAI,CAAE,IAApB,CAA0BC,SAAS,CAAE,IAArC,CAAD,CADnB,wCACRC,KADQ,eACDC,QADC,eAGf,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,UAAU,QAAIF,CAAAA,QAAQ,CAACN,SAAS,CAACK,KAAD,CAAQG,UAAR,CAAV,CAAZ,EAA9B,CAEA,mBACO,2BAAK,SAAS,CAAC,KAAf,eACE,oBAAC,OAAD,EAAS,KAAK,CAAEH,KAAK,CAACF,IAAN,EAAcE,KAAK,CAACH,KAApB,EAA6B,GAA7C,EADF,cAEE,oBAAC,KAAD,EAAO,YAAY,CAAEK,WAArB,EAFF,CADP,CAMF,CAXD,CAaA,cAAeN,CAAAA,GAAf","sourcesContent":["import React, {useState} from \"react\";\nimport Display from \"./component/Display\";\nimport Panel from \"./component/Panel\";\nimport calculate from \"./utils/calculate\";\nimport \"./App.css\";\n\nconst App = () => {\n   const [state, setState] = useState({total: null, next: null, operation: null})\n\n   const handleClick = buttonName => setState(calculate(state, buttonName))\n\n   return (\n          <div className=\"app\">\n            <Display value={state.next || state.total || \"0\"} />\n            <Panel clickHandler={handleClick} />\n          </div>\n        );   \n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}